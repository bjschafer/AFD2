---

- name: "[*nix] deploy apps to unreachable servers" # dmz & extranet
  git:
    repo: "{{ git_repo_uri_base }}/{{ item['name'] }}"
    dest: "{{ deploy_dir }}/{{ item['name'] }}"
    accept_hostkey: yes
    clone: yes
    depth: 1 # only gets the latest commit. faster and smaller.
    force: yes # discards modified files
    update: yes
    version: "{{ item['branches'][splunk_environment] }}"
    key_file: "{{ deploy_key_path }}"
    separate_git_dir: "{{ git_repo_dir_base }}/{{ item[0]['key'] }}"
  with_items: "{{ apps }}"
  when: item['manual'] is defined and ansible_facts['hostname'] in item['manual']
  notify: "apply new splunk config to unreachable forwarders"

- name: "[Windows] make sure tmp folder exists"
  file:
    path: "/tmp/afd2/"
    state: directory

- name: "[Windows] clone apps to local machine"
  connection: local
  git:
    repo: "{{ git_repo_uri_base }}/{{ item['name'] }}"
    dest: "/tmp/afd2/{{ item['name'] }}"
    accept_hostkey: yes
    clone: yes
    depth: 1 # only gets the latest commit. faster and smaller.
    force: yes # discards modified files
    update: yes
    version: "{{ item['branches'][splunk_environment] }}"
    key_file: "{{ deploy_key_path }}"
    separate_git_dir: "{{ git_repo_dir_base }}\{{ item[0]['key'] }}"
  with_items: "{{ apps }}"

- name: "[Windows] deploy apps to unreachable servers from local machine"
  win_copy:
    src: "/tmp/afd2/{{ item['name'] }}"
    dest: "C:\\Program Files\\SplunkUniversalForwarder\\etc\\apps"
  with_items: "{{ apps }}"
  notify: "apply new splunk config to unreachable forwarders"
